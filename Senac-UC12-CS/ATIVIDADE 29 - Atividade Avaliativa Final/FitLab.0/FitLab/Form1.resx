<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAYgAAAGFCAYAAADn3WT4AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wQAADsEBuJFr7QAABQ1JREFUeF7t1TERACAAAzHm+vcLO/cSMkRDzrYLAD9BAJAEAUASBABJEAAkQQCQ
        BAFAEgQASRAAJEEAkAQBQBIEAEkQACRBAJAEAUASBABJEAAkQQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQ
        ACRBAJAEAUASBABJEAAkQQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQACRBAJAEAUASBABJEAAkQQCQBAFA
        EgQASRAAJEEAkAQBQBIEAEkQACRBAJAEAUASBABJEAAkQQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQACRB
        AJAEAUASBABJEAAkQQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQACRBAJAEAUASBABJEAAkQQCQBAFAEgQA
        SRAAJEEAkAQBQBIEAEkQACRBAJAEAUASBABJEAAkQQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQACRBAJAE
        AUASBABJEAAkQQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQACRBAJAEAUASBABJEAAkQQCQBAFAEgQASRAA
        JEEAkAQBQBIEAEkQACRBAJAEAUASBABJEAAkQQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQACRBAJAEAUAS
        BABJEAAkQQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQACRBAJAEAUASBABJEAAkQQCQBAFAEgQASRAAJEEA
        kAQBQBIEAEkQACRBAJAEAUASBABJEAAkQQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQACRBAJAEAUASBABJ
        EAAkQQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQACRBAJAEAUASBABJEAAkQQCQBAFAEgQASRAAJEEAkAQB
        QBIEAEkQACRBAJAEAUASBABJEAAkQQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQACRBAJAEAUASBABJEAAk
        QQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQACRBAJAEAUASBABJEAAkQQCQBAFAEgQASRAAJEEAkAQBQBIE
        AEkQACRBAJAEAUASBABJEAAkQQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQACRBAJAEAUASBABJEAAkQQCQ
        BAFAEgQASRAAJEEAkAQBQBIEAEkQACRBAJAEAUASBABJEAAkQQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQ
        ACRBAJAEAUASBABJEAAkQQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQACRBAJAEAUASBABJEAAkQQCQBAFA
        EgQASRAAJEEAkAQBQBIEAEkQACRBAJAEAUASBABJEAAkQQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQACRB
        AJAEAUASBABJEAAkQQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQACRBAJAEAUASBABJEAAkQQCQBAFAEgQA
        SRAAJEEAkAQBQBIEAEkQACRBAJAEAUASBABJEAAkQQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQACRBAJAE
        AUASBABJEAAkQQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQACRBAJAEAUASBABJEAAkQQCQBAFAEgQASRAA
        JEEAkAQBQBIEAEkQACRBAJAEAUASBABJEAAkQQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQACRBAJAEAUAS
        BABJEAAkQQCQBAFAEgQASRAAJEEAkAQBQBIEAEkQACRBAJAEAUASBABJEACE3QdWwUjinF40BAAAAABJ
        RU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>